{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/db-service.service\";\nimport * as i2 from \"@angular/material/snack-bar\";\nexport class AdminEditPageComponent {\n  constructor(db, snackBar) {\n    this.db = db;\n    this.snackBar = snackBar;\n    this.getPhoto();\n  }\n  onFileChange(event) {\n    this.selectedFile = event.target.files[0];\n    console.log(this.selectedFile);\n    // alert(this.selectedFile);\n  }\n\n  onUpload() {\n    const uploadImageData = new FormData();\n    console.log(\"inside onupload\");\n    uploadImageData.append('image', this.selectedFile, this.selectedFile?.name);\n    uploadImageData.append('animeName', 'testimage1');\n    //   let obj={'animeName':'test1',\n    // 'image':uploadImageData}\n    this.db.addPhoto(uploadImageData).subscribe({\n      next: data => this.snack(data),\n      error: e => alert(`${e.message}\\n${e.status}`)\n    });\n  }\n  snack(data) {\n    console.log(\"inside snack bar\");\n    this.snackBar.open('Image Successfully added with ID: ' + data, 'success', {\n      duration: 5000,\n      panelClass: ['mat-toolbar', 'mat-primary']\n    });\n  }\n  getPhoto() {\n    this.db.getPhoto().subscribe(res => {\n      this.retrieveResonse = res;\n      console.log(res);\n      console.log(this.retrieveResonse);\n      console.log(this.retrieveResonse.image);\n      this.base64Data = this.retrieveResonse.image;\n      this.retrievedImage = 'data:image/jpeg;base64,' + this.base64Data;\n      console.log(this.retrievedImage);\n    });\n  }\n  getAllPhoto() {\n    this.db.getAllPhoto().subscribe(res => {\n      this.retrieveResonse = res;\n      console.log(res);\n      console.log(this.retrieveResonse);\n      console.log(this.retrieveResonse.image);\n      //\n    });\n  }\n}\n\nAdminEditPageComponent.ɵfac = function AdminEditPageComponent_Factory(t) {\n  return new (t || AdminEditPageComponent)(i0.ɵɵdirectiveInject(i1.DbServiceService), i0.ɵɵdirectiveInject(i2.MatSnackBar));\n};\nAdminEditPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AdminEditPageComponent,\n  selectors: [[\"app-admin-edit-page\"]],\n  decls: 4,\n  vars: 1,\n  consts: [[\"type\", \"file\", 3, \"change\"], [\"type\", \"button\", \"value\", \"Upload\", 3, \"click\"], [\"width\", \"500rem\", 3, \"src\"]],\n  template: function AdminEditPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"input\", 0);\n      i0.ɵɵlistener(\"change\", function AdminEditPageComponent_Template_input_change_0_listener($event) {\n        return ctx.onFileChange($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1, \"input\", 1);\n      i0.ɵɵlistener(\"click\", function AdminEditPageComponent_Template_input_click_1_listener() {\n        return ctx.onUpload();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(2, \" sdgd\\n\");\n      i0.ɵɵelement(3, \"img\", 2);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"src\", ctx.retrievedImage, i0.ɵɵsanitizeUrl);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,sBAAsB;EAYnCC,YAAoBC,EAAmB,EAASC,QAAqB;IAAjD,OAAE,GAAFD,EAAE;IAA0B,aAAQ,GAARC,QAAQ;IACxD,IAAI,CAACC,QAAQ,EAAE;EACf;EAEEC,YAAY,CAACC,KAAS;IACpB,IAAI,CAACC,YAAY,GAACD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACvCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,YAAY,CAAC;IAC9B;EACF;;EACAK,QAAQ;IACN,MAAMC,eAAe,GAAE,IAAIC,QAAQ,EAAE;IACrCJ,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9BE,eAAe,CAACE,MAAM,CAAC,OAAO,EAAC,IAAI,CAACR,YAAa,EAAC,IAAI,CAACA,YAAY,EAAES,IAAI,CAAC;IAC1EH,eAAe,CAACE,MAAM,CAAC,WAAW,EAAC,YAAY,CAAC;IAGlD;IACA;IACE,IAAI,CAACb,EAAE,CAACe,QAAQ,CAACJ,eAAe,CAAC,CAACK,SAAS,CAAC;MAACC,IAAI,EAACC,IAAI,IAAE,IAAI,CAACC,KAAK,CAACD,IAAI,CAAC;MAACE,KAAK,EAACC,CAAC,IAAEC,KAAK,CAAC,GAAGD,CAAC,CAACE,OAAO,KAAKF,CAAC,CAACG,MAAM,EAAE;IAAC,CAAC,CAAC;EACxH;EACAL,KAAK,CAACD,IAAQ;IACZV,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/B,IAAI,CAACR,QAAQ,CAACwB,IAAI,CAAC,oCAAoC,GAACP,IAAI,EAAE,SAAS,EAAE;MACvEQ,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE,CAAC,aAAa,EAAE,aAAa;KACxC,CAAC;EACN;EAEAzB,QAAQ;IAEN,IAAI,CAACF,EAAE,CAACE,QAAQ,EAAE,CAACc,SAAS,CAACY,GAAG,IAAE;MAEhC,IAAI,CAACC,eAAe,GAAGD,GAAG;MAC1BpB,OAAO,CAACC,GAAG,CAACmB,GAAG,CAAC;MAChBpB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACoB,eAAe,CAAC;MACjCrB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACoB,eAAe,CAACC,KAAK,CAAC;MACnC,IAAI,CAACC,UAAU,GAAG,IAAI,CAACF,eAAe,CAACC,KAAK;MAC5C,IAAI,CAACE,cAAc,GAAG,yBAAyB,GAAG,IAAI,CAACD,UAAU;MACjEvB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACuB,cAAc,CAAC;IAClC,CAAC,CAAC;EACR;EAEAC,WAAW;IAET,IAAI,CAACjC,EAAE,CAACiC,WAAW,EAAE,CAACjB,SAAS,CAACY,GAAG,IAAE;MAEnC,IAAI,CAACC,eAAe,GAAGD,GAAG;MAC1BpB,OAAO,CAACC,GAAG,CAACmB,GAAG,CAAC;MAChBpB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACoB,eAAe,CAAC;MACjCrB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACoB,eAAe,CAACC,KAAK,CAAC;MACnC;IACF,CAAC;EACP;;;AAhEWhC,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAoC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVnCC,gCAAmD;MAAhCA;QAAA,OAAUC,wBAAoB;MAAA,EAAC;MAAlDD,iBAAmD;MACnDA,gCAAyD;MAApCA;QAAA,OAASC,cAAU;MAAA,EAAC;MAAzCD,iBAAyD;MAEzDA,uBACA;MAAAA,yBAA2C;;;MAAvBA,eAAsB;MAAtBA,0DAAsB","names":["AdminEditPageComponent","constructor","db","snackBar","getPhoto","onFileChange","event","selectedFile","target","files","console","log","onUpload","uploadImageData","FormData","append","name","addPhoto","subscribe","next","data","snack","error","e","alert","message","status","open","duration","panelClass","res","retrieveResonse","image","base64Data","retrievedImage","getAllPhoto","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\mini Project\\AnimeSite\\src\\app\\admin-edit-page\\admin-edit-page.component.ts","D:\\mini Project\\AnimeSite\\src\\app\\admin-edit-page\\admin-edit-page.component.html"],"sourcesContent":["import { formatCurrency } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { DbServiceService } from '../services/db-service.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-admin-edit-page',\n  templateUrl: './admin-edit-page.component.html',\n  styleUrls: ['./admin-edit-page.component.css']\n})\nexport class AdminEditPageComponent {\n\nselectedFile?: File;\nretrievedImage: any;\nbase64Data: any;\nretrieveResonse: any;\n\narr?:[];\n\n\n\n\nconstructor(private db:DbServiceService,private snackBar: MatSnackBar){\nthis.getPhoto();\n}\n\n  onFileChange(event:any){\n    this.selectedFile=event.target.files[0];\n    console.log(this.selectedFile);\n    // alert(this.selectedFile);\n  }\n  onUpload(){\n    const uploadImageData= new FormData();\n    console.log(\"inside onupload\")\n    uploadImageData.append('image',this.selectedFile!,this.selectedFile?.name);\n    uploadImageData.append('animeName','testimage1');\n\n\n  //   let obj={'animeName':'test1',\n  // 'image':uploadImageData}\n    this.db.addPhoto(uploadImageData).subscribe({next:data=>this.snack(data),error:e=>alert(`${e.message}\\n${e.status}`)});\n  }\n  snack(data:any){\n    console.log(\"inside snack bar\")\n    this.snackBar.open('Image Successfully added with ID: '+data, 'success', {​\n      duration: 5000,​\n      panelClass: ['mat-toolbar', 'mat-primary']​\n      })\n  }\n\n  getPhoto(){\n\n    this.db.getPhoto().subscribe(res=>{\n\n      this.retrieveResonse = res;\n      console.log(res);\n      console.log(this.retrieveResonse);\n      console.log(this.retrieveResonse.image)\n          this.base64Data = this.retrieveResonse.image;\n          this.retrievedImage = 'data:image/jpeg;base64,' + this.base64Data;\n          console.log(this.retrievedImage)\n        })\n  }\n\n  getAllPhoto(){\n\n    this.db.getAllPhoto().subscribe(res=>{\n\n      this.retrieveResonse = res;\n      console.log(res);\n      console.log(this.retrieveResonse);\n      console.log(this.retrieveResonse.image)\n          //\n        }\n  }\n}\n","<input type=\"file\" (change)=\"onFileChange($event)\">\n<input type=\"button\" (click)=\"onUpload()\" value=\"Upload\">\n\nsdgd\n<img width=\"500rem\" [src]=\"retrievedImage\">\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}